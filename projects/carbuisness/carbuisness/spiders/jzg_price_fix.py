# -*- coding: utf-8 -*-
"""

C2017-40

"""
import os
import scrapy
from carbuisness.items import JzgPriceItem
import time
from scrapy.conf import settings
from scrapy.mail import MailSender
import logging
import json
import re
import random
import hashlib
from hashlib import md5
from carbuisness.getip import getProxy
from selenium import webdriver
from scrapy.xlib.pydispatch import dispatcher
from scrapy import signals
from scrapy.conf import settings
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from lxml import etree
import requests
import MySQLdb
import pymongo
import datetime
import pytesseract
from PIL import Image

website='jzg_price_test_img_2019_0816'


class CarSpider(scrapy.Spider):

    name=website
    start_urls = []

    def __init__(self,**kwargs):
        super(CarSpider,self).__init__(**kwargs)
        self.mailer=MailSender.from_settings(settings)
        self.counts=0
        self.carnum=800000
        self.city_count = 0

        settings.set('CrawlCar_Num',self.carnum,priority='cmdline')
        settings.set('MONGODB_DB','residual_value',priority='cmdline')
        settings.set('MONGODB_COLLECTION',website,priority='cmdline')

        # self.browser = webdriver.PhantomJS(executable_path=settings['PHANTOMJS_PATH'])
        # self.browser = webdriver.PhantomJS(executable_path="/usr/local/phantomjs/bin/phantomjs")
        # self.browser = webdriver.PhantomJS(executable_path="/root/home/phantomjs")
        # super(CarSpider, self).__init__()
        # dispatcher.connect(self.spider_closed, signals.spider_closed)

    # def spider_closed(self):
    #     self.browser.quit()
    def start_requests(self):
        yield scrapy.FormRequest(method="post", url="http://common.jingzhengu.com/area/getProvList", formdata={})

    def parse(self, response):
        provs = json.loads(response.text)
        for prov in provs["list"]:
            yield scrapy.FormRequest(url='http://common.jingzhengu.com/area/getCityListByProvId', formdata={"provId":str(prov["areaId"])}, callback=self.parse_city)

    def parse_city(self, response):
        mysqlconnection = MySQLdb.connect("192.168.1.94", "root", "Datauser@2017", 'people_zb', 3306)
        dbc = mysqlconnection.cursor()
        mysqlconnection.set_character_set('utf8')
        dbc.execute('SET NAMES utf8;')
        dbc.execute('SET CHARACTER SET utf8;')
        dbc.execute('SET character_set_connection=utf8;')

        sql = "select cityname from jingzhengu_city"
        dbc.execute(sql)
        res = dbc.fetchall()
        dbc.close()
        mysqlconnection.close()

        citylist = []
        for row in res:
            citylist.append(row[0])

        cities = json.loads(response.text)
        final_city_list = {}
        for city in cities["list"]:
            if city["areaName"] in citylist:
                final_city_list[city["areaId"]] = city["areaName"]

        self.city_count += len(final_city_list)
        # print(self.city_count)
        # print(final_city_list)

        connection = pymongo.MongoClient("192.168.1.94", 27017)
        db = connection["residual_value"]
        collection = db["jzg_modellist2"]

        data = collection.find()
        for model in data:
            if model["modelid"] in ["10000143","10005014","10006579","10006807","10010377","102502","105459","106000","107548","109489","10994","110153","111435","112735","114535","116348","120408","120464","12135","121645","122142","122304","123383","12382","125747","128402","13561","14221","14311","3671","3673","492","7953","9881","10001207","10006489","10006491","10006493","10006495","10006497","10006585","10006755","10006765","100094","10009475","10009581","10255","10257","10424","10428","107153","107536","107794","107923","108317","108318","108326","108329","108706","108707","108708","108936","108937","109051","109052","109055","109056","109082","109498","113364","113365","114656","114668","116289","119910","121133","121134","121387","121388","122058","122060","122350","122351","122487","122490","122492","122495","122496","122497","127275","127276","127277","127278","127279","127280","127281","128828","128829","129658","129659","129660","129661","129662","129801","129802","129803","129804","129805","130005","130006","130007","130008","130821","130822","130823","130824","130825","130826","130827","132038","132039","132040","132041","132042","132174","132865","132866","132867","132868","133299","133428","133429","133430","133599","133600","133759","1428","1436","1437","1438","1441","161","162","164","168","1813","1948","2429","4012","4013","5928","5929","6905","7417","8927","9643","9644","10004733","10004803","10004897","10004898","10004899","10004927","10005018","10005061","10005089","10005090","10005234","10005236","10005237","10005238","10005239","10005240","10005241","10005242","10005243","10005268","10005269","10005278","10005279","10005280","10005281","10005282","10005306","10005347","10005429","10005485","10005494","10005495","10005496","10005500","10005501","10005502","10005520","10005521","10005524","10005537","10005577","10005709","10005713","10005715","10005717","10005719","10005721","10005723","10005725","10005727","10005729","10005733","10005735","10005737","10005739","10005827","10005829","10005835","10005837","10005839","10005841","10005843","10005845","10005847","10005931","10005957","10005959","10005961","10005963","10005965","10005997","10006001","10006007","10006009","10006011","10006027","10006029","10006031","10006033","10006035","10006037","10006041","10006043","10006045","10006047","10006049","10006051","10006093","10006095","10006135","10006137","10006139","10006141","10006177","10006265","10006267","10006305","10006307","10006309","10006527","10006539","10006583","10006599","10006603","10006635","10006637","10006639","10006651","10006653","10006659","10006663","10006665","10006669","10006691","10006697","10006699","10006745","10006829","10006919","10006925","10006927","10008725","10009199","10009271","10009331","10009395","10009403","10009405","10009463","10009465","10009467","10009469","10009471","10009473","10009495","10009497","10009501","10009511","10009541","10009551","10009617","10009695","10009787","10009789","10009791","10009793","10009795","10009797","10009799","103920","103923","103924","104060","104061","104062","104322","104324","104325","109529","110010","111126","111127","111384","111386","111487","112062","112144","112147","112882","112956","113088","113089","113090","113091","113286","113288","113565","113735","113933","114298","114301","114302","114630","114631","114880","114908","114923","114968","114969","114997","115006","115070","115071","115074","115271","115494","115737","115770","115794","115910","115911","115939","115970","115971","115974","115975","116008","116009","116010","116011","116075","116076","116079","116228","116229","116230","116231","116309","116356","116366","116480","116481","116483","116492","116493","116496","116502","116508","116546","116547","116562","116564","116565","116566","116568","116586","116691","116692","116693","116724","116760","116770","116816","116828","116830","116831","116832","116833","116834","116900","116901","116902","116903","116905","116911","116914","116915","116916","116918","116924","116925","116926","116927","116928","116929","116930","116931","116942","116944","116946","116947","116955","116979","117102","117108","117114","117116","117117","117120","117121","117124","117139","117140","117141","117142","117143","117254","117256","117257","117258","117259","117260","117269","117274","117275","117276","117277","117279","117282","117359","117372","117381","117382","117397","117398","117400","117401","117433","117437","117471","117627","117628","117629","117703","117927","117929","117986","117988","117989","117990","117992","117993","118018","118019","118020","118022","118023","118024","118195","118196","118198","118199","118200","118201","118213","118261","118262","118263","118264","118266","118281","118282","118283","118284","118294","118295","118300","118320","118322","118350","118351","118353","118355","118357","118361","118389","118390","118405","118406","118407","118437","118482","118525","118528","118553","118554","118555","118556","118557","118558","118559","118560","118590","118596","118598","118661","118666","118687","118693","118694","118695","118700","118701","118704","118731","118736","118739","118745","118747","118748","118775","118776","118777","118980","118981","118982","119002","119003","119010","119011","119012","119016","119088","119096","119112","119113","119114","119126","119127","119128","119129","119131","119139","119140","119141","119142","119143","119146","119147","119148","119243","119261","119327","119338","119402","119407","119451","119452","119454","119455","119473","119570","119580","119611","119618","119619","119620","119628","119741","119813","119828","119830","119835","119837","119838","119839","119840","119841","119842","119843","119867","119871","119872","119887","119888","119889","119892","119894","119895","119911","119920","119921","119949","119981","119993","120010","120011","120012","120013","120014","120016","120137","120175","120181","120188","120211","120212","120213","120218","120235","120272","120287","120335","120336","120339","120396","120422","120435","120452","120453","120470","120471","120472","120475","120477","120497","120510","120516","120518","120571","120572","120575","120593","120621","120622","120623","120624","120625","120626","120627","120628","120718","120720","120724","120726","120729","120750","120753","120754","120755","120756","120757","120758","120775","120783","120806","120814","120845","120846","120896","120897","120912","120916","120917","120936","120959","120974","120977","120982","120983","121000","121001","121002","121004","121005","121006","121007","121008","121009","121010","121012","121013","121014","121015","121016","121017","121019","121020","121026","121043","121044","121045","121073","121085","121107","121168","121169","121170","121171","121172","121173","121174","121177","121178","121179","121180","121182","121198","121200","121226","121227","121228","121229","121230","121231","121239","121240","121241","121245","121246","121247","121306","121307","121308","121309","121310","121325","121361","121434","121435","121436","121437","121446","121470","121471","121490","121492","121496","121516","121517","121519","121520","121521","121530","121532","121533","121534","121535","121536","121537","121543","121577","121595","121597","121598","121599","121600","121620","121683","121686","121688","121689","121690","121691","121692","121693","121695","121696","121697","121719","121720","121721","121726","121727","121728","121729","121747","121749","121779","121783","121786","121788","121796","121828","121834","121839","121840","121841","121842","121848","121849","121850","121917","122034","122045","122063","122065","122066","122067","122071","122072","122073","122074","122079","122081","122082","122083","122084","122090","122102","122103","122104","122105","122106","122129","122147","122192","122193","122200","122207","122208","122209","122210","122211","122219","122220","122253","122254","122275","122278","122307","122321","122341","122365","122379","122382","122417","122428","122440","122444","122445","122446","122465","122505","122506","122507","122533","122534","122535","122542","122556","122557","122558","122600","122601","122608","122610","122615","122616","122617","122619","122620","122653","122655","122686","122695","122700","122703","122716","122719","122720","122722","122723","122725","122726","122727","122732","122788","122789","122884","122885","122886","122946","122980","122981","122982","122983","122984","122985","122986","123017","123018","123020","123021","123022","123044","123046","123050","123051","123052","123053","123063","123076","123077","123078","123079","123080","123081","123082","123087","123090","123117","123118","123119","123120","123122","123160","123204","123205","123209","123226","123270","123271","123272","123280","123281","123282","123322","123323","123325","123327","123328","123329","123339","123343","123344","123381","123384","123390","123391","123392","123393","123394","123405","123406","123407","123408","123409","123410","123411","123412","123413","123419","123443","123446","123447","123448","123450","123452","123453","123454","123455","123458","123476","123482","123484","123511","123512","123513","123514","123538","123539","123540","123541","123542","123543","123544","123545","123546","123554","123557","123558","123559","123561","123562","123570","123571","123572","123573","123576","123584","123595","123601","123602","123603","123604","123616","123617","123618","123627","123631","123633","123634","123641","123642","123643","123650","123674","123675","123676","123677","123678","123683","123684","123713","123716","123717","123719","123789","123790","123792","123793","123794","123805","123835","123836","123837","123838","123839","123840","123841","123842","123850","123852","123853","123854","123855","123856","123857","123858","123859","123860","123863","123877","123878","123879","123880","123883","123885","123890","123891","123924","123925","123926","123928","123946","123965","123966","123967","123968","123971","123972","123973","123993","123994","123995","123996","123997","123998","124022","124023","124055","124134","124135","124136","124137","124138","124139","124140","124141","124142","124143","124144","124145","124146","124147","124148","124149","124150","124151","124152","124153","124245","124247","124255","124267","124269","124270","124279","124330","124331","124332","124385","124449","124458","124552","124553","124554","124555","124556","124578","124579","124586","124596","124597","124630","124631","124648","124660","124665","124666","124667","124703","124745","124859","124860","124888","124890","124895","124907","124908","124909","124910","124911","125042","125061","125065","125068","125069","125074","125078","125098","125099","125100","125101","125102","125108","125109","125124","125125","125131","125132","125133","125176","125180","125190","125196","125197","125198","125200","125201","125203","125206","125207","125209","125215","125222","125223","125234","125259","125266","125267","125268","125270","125339","125341","125349","125364","125365","125366","125368","125369","125370","125531","125535","125536","125537","125539","125550","125560","125561","125573","125598","125622","125627","125628","125629","125632","125633","125634","125635","125650","125651","125653","125654","125656","125658","125665","125667","125669","125672","125722","125730","125737","125738","125739","125741","125745","125746","125783","125784","125785","125817","125830","125846","125847","125848","125850","125851","125854","125865","125866","125868","125870","125873","125877","125878","125879","125880","125881","125898","125900","125901","125902","125903","125906","125907","125908","125911","125912","125926","125927","125953","125954","125955","125960","125963","125964","125965","125967","125978","125979","125980","125982","126018","126019","126020","126021","126022","126023","126024","126036","126037","126038","126039","126040","126068","126070","126077","126091","126092","126116","126119","126124","126143","126193","126194","126195","126199","126200","126201","126209","126210","126222","126226","126281","126304","126332","126380","126381","126382","126384","126397","126406","126421","126422","126435","126442","126462","126463","126464","126465","126478","126486","126487","126496","126497","126498","126500","126501","126513","126515","126516","126517","126518","126520","126532","126540","126541","126542","126543","126544","126545","126601","126602","126603","126604","126605","126606","126617","126624","126628","126644","126645","126650","126654","126687","126688","126707","126710","126722","126723","126724","126726","126728","126729","126735","126804","126805","126807","126823","126825","126839","126840","126842","126863","126864","126867","126868","126869","126870","126873","126875","126877","126878","126879","126883","126890","126892","126893","126894","126895","126896","126897","126928","126962","126981","126982","126983","126984","126985","126986","126987","126988","126989","127005","127006","127009","127015","127036","127050","127056","127063","127086","127087","127088","127089","127101","127122","127136","127170","127171","127173","127202","127203","127204","127206","127219","127224","127225","127226","127236","127237","127238","127240","127243","127248","127249","127250","127251","127253","127254","127263","127264","127266","127269","127270","127282","127283","127285","127324","127325","127326","127344","127347","127348","127358","127362","127379","127383","127398","127408","127411","127413","127415","127425","127426","127436","127439","127441","127466","127483","127484","127486","127487","127511","127515","127516","127528","127530","127536","127537","127538","127547","127548","127549","127575","127576","127594","127595","127596","127630","127639","127647","127648","127651","127653","127661","127664","127669","127688","127693","127699","127700","127701","127702","127703","127705","127706","127709","127710","127714","127715","127716","127730","127731","127746","127748","127751","127754","127755","127756","127853","127855","127856","127857","127859","127860","127861","127862","127863","127864","127865","127870","127878","127879","127892","127893","127894","127936","127939","127941","127942","127945","127950","127951","127967","127968","127971","128009","128025","128045","128046","128047","128048","128051","128099","128100","128102","128104","128105","128106","128107","128131","128133","128171","128193","128194","128195","128213","128214","128224","128274","128276","128282","128354","128355","128356","128365","128375","128376","128407","128408","128410","128411","128412","128413","128414","128415","128416","128417","128418","128419","128428","128440","128445","128449","128451","128452","128455","128456","128457","128458","128482","128488","128501","128502","128504","128509","128510","128511","128517","128518","128519","128522","128523","128524","128526","128556","128557","128558","128574","128582","128583","128584","128586","128618","128619","128620","128632","128633","128634","128652","128653","128654","128655","128656","128657","128658","128659","128660","128665","128667","128668","128680","128682","128683","128684","128694","128728","128729","128742","128743","128762","128767","128768","128821","128822","128823","128825","128826","128836","128838","128839","128842","128850","128851","128852","128856","128857","128858","128867","128868","128891","128892","128896","128901","128961","128962","128986","128987","128988","129008","129032","129041","129042","129053","129060","129063","129064","129065","129066","129067","129068","129069","129083","129084","129086","129096","129097","129098","129099","129101","129102","129109","129110","129111","129122","129130","129131","129132","129133","129135","129137","129138","129141","129170","129192","129194","129195","129199","129203","129213","129216","129219","129220","129222","129225","129235","129236","129237","129240","129249","129250","129251","129252","129260","129273","129274","129275","129302","129307","129380","129381","129485","129487","129488","129489","129496","129497","129547","129553","129562","129576","129581","129584","129586","129587","129588","129603","129604","129605","129606","129607","129632","129646","129648","129650","129652","129671","129676","129688","129689","129694","129712","129714","129715","129716","129725","129726","129734","129735","129785","129808","129827","129847","129848","129855","129856","129857","129858","129859","129860","129861","129905","129906","129913","129914","129916","129921","129922","129923","129924","129925","129926","129927","129936","129937","129938","129992","129993","129994","129995","130003","130054","130060","130061","130062","130063","130069","130079","130085","130089","130090","130091","130097","130109","130121","130124","130144","130145","130155","130168","130185","130189","130196","130200","130201","130202","130203","130204","130207","130210","130211","130212","130213","130214","130215","130223","130228","130229","130230","130232","130233","130234","130235","130237","130238","130239","130248","130249","130250","130251","130252","130258","130261","130269","130270","130278","130283","130285","130289","130300","130302","130303","130310","130311","130312","130313","130314","130317","130318","130319","130320","130321","130322","130324","130326","130332","130333","130334","130363","130368","130370","130380","130381","130384","130386","130387","130388","130389","130391","130396","130397","130398","130399","130400","130401","130402","130403","130404","130405","130406","130407","130408","130409","130410","130411","130416","130436","130437","130441","130442","130443","130444","130450","130451","130459","130471","130472","130479","130484","130485","130486","130487","130488","130490","130505","130506","130525","130526","130527","130528","130531","130536","130539","130540","130545","130546","130547","130548","130549","130550","130551","130562","130563","130564","130565","130570","130577","130578","130579","130580","130581","130582","130583","130613","130614","130615","130616","130617","130618","130619","130620","130637","130638","130641","130642","130644","130645","130646","130647","130648","130649","130650","130655","130657","130678","130679","130681","130695","130696","130744","130747","130753","130756","130769","130771","130772","130773","130774","130785","130786","130787","130799","130800","130801","130802","130803","130804","130805","130806","130807","130808","130809","130810","130817","130831","130832","130834","130835","130836","130837","130838","130839","130840","130841","130842","130846","130847","130848","130849","130850","130851","130872","130873","130874","130880","130882","130883","130893","130894","130896","130897","130898","130899","130900","130915","130916","130917","130945","130946","130947","130948","130949","130950","130961","130962","130963","130964","130965","130974","130975","130976","130977","130978","130991","130992","130993","130994","130995","130996","130997","130998","131012","131014","131028","131029","131030","131041","131050","131063","131064","131066","131067","131068","131069","131070","131075","131078","131082","131101","131102","131120","131121","131122","131124","131125","131126","131127","131128","131129","131130","131131","131132","131133","131134","131135","131156","131157","131158","131163","131164","131165","131166","131167","131168","131169","131171","131172","131175","131176","131177","131178","131182","131183","131184","131200","131201","131203","131204","131207","131222","131223","131224","131226","131227","131228","131229","131231","131237","131280","131284","131286","131303","131304","131305","131306","131307","131308","131309","131310","131311","131312","131314","131327","131348","131349","131350","131379","131380","131381","131382","131383","131385","131386","131387","131389","131394","131395","131396","131460","131463","131473","131474","131606","131610","131612","131613","131614","131621","131636","131650","131651","131652","131653","131655","131656","131681","131691","131700","131701","131728","131750","131752","131754","131757","131780","131786","131791","131792","131793","131800","131804","131805","131806","131807","131813","131815","131816","131818","131819","131820","131822","131826","131827","131836","131867","131871","131872","131873","131875","131883","131884","131987","132018","132019","132020","132021","132080","132082","132135","132136","132142","132160","132161","132195","132198","132199","132200","132201","132202","132205","132206","132207","132208","132209","132244","132245","132248","132249","132312","132313","132314","132322","132325","132328","132329","132331","132332","132361","132362","132363","132365","132366","132744","132761","132763","16063","16065","16066","16067","4668","4669","4670","4672","5894"]:
                min_year = int(model["make_year"]) - 1
                if int(model["next_year"]) == int(time.strftime('%Y', time.localtime())):
                    max_year = int(model["next_year"])
                elif int(model["next_year"]) == int(time.strftime('%Y', time.localtime())) - 1:
                    max_year = int(model["next_year"]) + 1
                else:
                    max_year = int(model["next_year"]) + 2
                month = datetime.datetime.now().month
                # month = str(time.strftime('%m', time.localtime()))
                # if int(month) < 10:
                #     month = str(0) + str(month)
                # print(max_year)
                for i in range(min_year, max_year):
                    mile = 2 * (int(time.strftime('%Y', time.localtime()))-i)
                    # print(mile)
                    final_city_list = {"2401":u"上海"}
                    # for c in {"2401":u"上海"}:
                    for c in final_city_list:
                        formdata = {
                            "sourcetype": "3",
                            "regdate": "%s-%s-1" % (str(i), month),
                            "cityname": final_city_list[c],
                            "CityId": str(c),
                            "styleid": str(model["modelid"]),
                            "uid": "0",
                            "op": "GetValuationInfo",
                            "mileage": str(mile*10000),
                            # "sign": "27B900C60B10581444D6F55126074414"
                        }
                        # print(formdata)
                        url_sell = "http://appraise.jingzhengu.com/sale-s%s-r%s-m%s-c%s-y-j-h" % (formdata['styleid'], formdata['regdate'], formdata['mileage'], formdata['CityId'])
                        url_buy = "http://appraise.jingzhengu.com/buy-s%s-r%s-m%s-c%s-y-j-h" % (formdata['styleid'], formdata['regdate'], formdata['mileage'], formdata['CityId'])
                        # print(url)
                        yield scrapy.Request(url=url_sell, meta=dict({"type":"sell"}, **formdata), callback=self.parse_price)
                        yield scrapy.Request(url=url_buy, meta=dict({"type":"buy"}, **formdata), callback=self.parse_price)


                        # yield scrapy.FormRequest(url="http://ptvapi.guchewang.com/APPV5/SellCarAppraiseResultv1.ashx", formdata=formdata, callback=self.parse_price)


    def parse_img(self, url, status):

        date_str = time.strftime('%Y-%m-%d', time.localtime())


        img_res = requests.request("get", url=url, headers={
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"})
        with open("blm/img_temp/%s.jpg" % (status), "ab") as f:
            f.write(img_res.content)
            f.close()

        try:
            img = Image.open("blm/img_temp/%s.jpg" % (status))
            img_str = pytesseract.image_to_string(img)
            os.remove("blm/img_temp/%s.jpg" % status)
        except Exception as e:
            logging.log(msg=str(e), level=logging.INFO)
            os.remove("blm/img_temp/%s.jpg" % status)
            return 0
        return re.findall("^\d+\.\d{2}", img_str)[0]



    def parse_price(self, response):

        # print(response.text)
        # res = json.loads(response.text)
        item = JzgPriceItem()
        item["grabtime"] = time.strftime('%Y-%m-%d %X', time.localtime())
        item["url"] = response.url
        # item['brandid'] = res["MakeId"]
        # item['familyid'] = res["ModelId"]
        item['modelid'] = response.meta["styleid"]
        # item['brandname'] = res["MakeName"]
        # item['familyname'] = res["ModelName"]
        # item['model_full_name'] = res["ModelFullName"]
        # item['HBBZ'] = res["HBBZ"]
        # item['RegDateTime'] = res["RegDateTime"]
        item['RegDate'] = response.meta["regdate"]
        # item['MarketMonthNum'] = res["MarketMonthNum"]
        item['Mileage'] = response.meta["mileage"]
        # item['ProvId'] = res["ProvId"]
        # item['ProvName'] = res["ProvName"]
        item['CityId'] = response.meta["CityId"]
        item['CityName'] = response.meta["cityname"]
        # item['NowMsrp'] = res["NowMsrp"]
        # item['C2BALowPrice'] = res["C2BALowPrice"]
        # item['C2BAMidPrice'] = res["C2BAMidPrice"]
        # item['C2BAUpPrice'] = res["C2BAUpPrice"]
        # item['C2BBLowPrice'] = res["C2BBLowPrice"]
        # item['C2BBMidPrice'] = res["C2BBMidPrice"]
        # item['C2BBUpPrice'] = res["C2BBUpPrice"]
        # item['C2BCLowPrice'] = res["C2BCLowPrice"]
        # item['C2BCMidPrice'] = res["C2BCMidPrice"]
        # item['C2BCUpPrice'] = res["C2BCUpPrice"]
        # item['C2CALowPrice'] = res["C2CALowPrice"]
        # item['C2CAMidPrice'] = res["C2CAMidPrice"]
        # item['C2CAUpPrice'] = res["C2CAUpPrice"]
        # item['C2CBLowPrice'] = res["C2CBLowPrice"]
        # item['C2CBMidPrice'] = res["C2CBMidPrice"]
        # item['C2CBUpPrice'] = res["C2CBUpPrice"]
        # item['C2CCLowPrice'] = res["C2CCLowPrice"]
        # item['C2CCMidPrice'] = res["C2CCMidPrice"]
        # item['C2CCUpPrice'] = res["C2CCUpPrice"]
        # item['PriceLevel'] = res["PriceLevel"]
        # item['BaoZhilvRank'] = res["BaoZhilvRank"]
        # item['BaoZhilvCityId'] = res["BaoZhilvCityId"]
        # item['BaoZhilvCityName'] = res["BaoZhilvCityName"]
        # item['BaoZhilvLevel'] = res["BaoZhilvLevel"]
        # item['BaoZhilvLevelName'] = res["BaoZhilvLevelName"]
        # item['BaoZhilvPercentage ']= res["BaoZhilvPercentage"]
        # item['maxPrice'] = res["maxPrice"]
        # item['minLoanRate'] = res["minLoanRate"]
        # item['ShareUrl'] = res["ShareUrl"]
        # item['PlatNumber'] = res["PlatNumber"]
        item['type'] = response.meta['type']

        item["status"] = item["RegDate"] + "-" + item["Mileage"] + "-" + item["CityId"] + "-" + item["modelid"] + "-" + \
                         item['type'] + "-" + time.strftime('%Y-%m', time.localtime())

        if item['type'] == "sell":
            item['C2BMidPrice_sell'] = response.xpath("//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[2]/input[@id='hdC2BMidPrice']/@value").extract_first()

            item['C2BLowPrice_sell_img'] = response.urljoin(response.xpath("//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[1]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2BLowPrice_sell_img'] = self.parse_img(item['C2BLowPrice_sell_img'],
                                                      item['status'] + "-" + "C2BLowPrice_sell_img")
            item['C2BUpPrice_sell_img'] = response.urljoin(response.xpath("//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[3]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2BUpPrice_sell_img'] = self.parse_img(item['C2BUpPrice_sell_img'],
                                                      item['status'] + "-" + "C2BUpPrice_sell_img")
            item['C2CMidPrice_sell_img'] = response.urljoin(response.xpath("//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[2]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CMidPrice_sell_img'] = self.parse_img(item['C2CMidPrice_sell_img'],
                                                      item['status'] + "-" + "C2CMidPrice_sell_img")
            item['C2CLowPrice_sell_img'] = response.urljoin(response.xpath("//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[1]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CLowPrice_sell_img'] = self.parse_img(item['C2CLowPrice_sell_img'],
                                                      item['status'] + "-" + "C2CLowPrice_sell_img")
            item['C2CUpPrice_sell_img'] = response.urljoin(response.xpath("//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[3]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CUpPrice_sell_img'] = self.parse_img(item['C2CUpPrice_sell_img'],
                                                      item['status'] + "-" + "C2CUpPrice_sell_img")
        else:
            item['B2CMidPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[2]/span[3]/img/@src").extract_first().replace("1_1", "2_1"))
            item['B2CMidPrice_buy_img'] = self.parse_img(item['B2CMidPrice_buy_img'],
                                                         item['status'] + "-" + "B2CMidPrice_buy_img")
            item['B2CLowPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[1]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['B2CLowPrice_buy_img'] = self.parse_img(item['B2CLowPrice_buy_img'],
                                                         item['status'] + "-" + "B2CLowPrice_buy_img")
            item['B2CUpPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[1]/ul/li[3]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['B2CUpPrice_buy_img'] = self.parse_img(item['B2CUpPrice_buy_img'],
                                                         item['status'] + "-" + "B2CUpPrice_buy_img")
            item['C2CMidPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[2]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CMidPrice_buy_img'] = self.parse_img(item['C2CMidPrice_buy_img'],
                                                         item['status'] + "-" + "C2CMidPrice_buy_img")
            item['C2CLowPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[1]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CLowPrice_buy_img'] = self.parse_img(item['C2CLowPrice_buy_img'],
                                                         item['status'] + "-" + "C2CLowPrice_buy_img")
            item['C2CUpPrice_buy_img'] = response.urljoin(response.xpath(
                "//*[@class='w_carpricinfobox clearfix']/div[2]/ul/li[3]/span[3]/img/@src").extract_first().replace("2_2", "2_1"))
            item['C2CUpPrice_buy_img'] = self.parse_img(item['C2CUpPrice_buy_img'],
                                                         item['status'] + "-" + "C2CUpPrice_buy_img")

        # print(item)
        yield item

